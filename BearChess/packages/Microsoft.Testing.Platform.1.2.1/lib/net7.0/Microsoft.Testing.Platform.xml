<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Testing.Platform</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Testing.Platform.Builder.ConfigurationOptions">
            <summary>
            Represents the configuration options for the builder.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ConfigurationOptions.ConfigurationSources">
            <summary>
            Gets the configuration sources options.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ConfigurationSourcesOptions">
            <summary>
            Represents the options for configuration sources.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ConfigurationSourcesOptions.RegisterEnvironmentVariablesConfigurationSource">
            <summary>
            Gets or sets a value indicating whether to register the environment variables configuration source.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ITestApplication">
            <summary>
            Represents an interface for a test application.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.ITestApplication.RunAsync">
            <summary>
            Runs the test application asynchronously.
            </summary>
            <returns>The exit code of the test application.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder">
            <summary>
            Represents an interface for building test applications.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.TestHost">
            <summary>
            Gets the test host manager.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.TestHostControllers">
            <summary>
            Gets the test host controllers manager.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.CommandLine">
            <summary>
            Gets the command line manager.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.RegisterTestFramework(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapabilities},System.Func{Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapabilities,System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework})">
            <summary>
            Registers a test framework with the application builder.
            </summary>
            <param name="capabilitiesFactory">The factory method for creating test framework capabilities.</param>
            <param name="adapterFactory">The factory method for creating a test framework adapter.</param>
            <returns>The updated test application builder.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.ITestApplicationBuilder.BuildAsync">
            <summary>
            Builds the test application asynchronously.
            </summary>
            <returns>A task representing the asynchronous operation. The task result is the built test application.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.TestApplication">
            <summary>
            Represents a test application.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.CreateServerModeBuilderAsync(System.String[],Microsoft.Testing.Platform.Builder.TestApplicationOptions)">
            <summary>
            Creates a server mode builder asynchronously.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="testApplicationOptions">The test application options.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.CreateBuilderAsync(System.String[],Microsoft.Testing.Platform.Builder.TestApplicationOptions)">
            <summary>
            Creates a builder asynchronously.
            </summary>
            <param name="args">The command line arguments.</param>
            <param name="testApplicationOptions">The test application options.</param>
            <returns>The task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Builder.TestApplication.RunAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.TestApplicationBuilder">
            <summary>
            A builder for test applications and services.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Builder.TestApplicationOptions">
            <summary>
            Represents the options for a test application.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.TestApplicationOptions.EnableTelemetry">
            <summary>
            Gets or sets a value indicating whether telemetry is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Builder.TestApplicationOptions.Configuration">
            <summary>
            Gets the configuration options for the test application.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.ICapabilities`1">
            <summary>
            Represents the capabilities provided by an extension.
            </summary>
            <typeparam name="TCapability">The type of capability.</typeparam>
        </member>
        <member name="P:Microsoft.Testing.Platform.Capabilities.ICapabilities`1.Capabilities">
            <summary>
            Gets the collection of capabilities.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.ICapability">
            <summary>
            Represents a capability.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapabilities">
            <summary>
            Represents the capabilities of a test framework.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities">
            <summary>
            Represents the capabilities of a test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities.#ctor(System.Collections.Generic.IReadOnlyCollection{Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapability})">
            <summary>
            Represents the capabilities of a test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities.#ctor(Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapability[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities"/> class.
            </summary>
            <param name="capabilities">The test framework capabilities.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Capabilities.TestFramework.TestFrameworkCapabilities.Capabilities">
            <summary>
            Gets the test framework capabilities.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Capabilities.TestFramework.ITestFrameworkCapability">
            <summary>
            Represents a capability for a test framework.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity">
            <summary>
            Represents the arity (minimum and maximum number of arguments) for a command line argument.
            </summary>
            <remarks>
            This is taken from https://learn.microsoft.com/dotnet/standard/commandline/syntax#argument-arity.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.#ctor(System.Int32,System.Int32)">
            <summary>
            Represents the arity (minimum and maximum number of arguments) for a command line argument.
            </summary>
            <remarks>
            This is taken from https://learn.microsoft.com/dotnet/standard/commandline/syntax#argument-arity.
            </remarks>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Zero">
            <summary>
            Represents an argument arity of zero.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.ZeroOrOne">
            <summary>
            Represents an argument arity of zero or one.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.ZeroOrMore">
            <summary>
            Represents an argument arity of zero or more.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.OneOrMore">
            <summary>
            Represents an argument arity of one or more.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.ExactlyOne">
            <summary>
            Represents an argument arity of exactly one.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Min">
            <summary>
            Gets the minimum number of arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Max">
            <summary>
            Gets the maximum number of arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.op_Equality(Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity)">
            <summary>
            Determines whether two instances of <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> are equal.
            </summary>
            <param name="left">The first <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.op_Inequality(Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity)">
            <summary>
            Determines whether two instances of <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> are not equal.
            </summary>
            <param name="left">The first <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity"/> to compare.</param>
            <returns><c>true</c> if the instances are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Equals(Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption">
            <summary>
            Represents a command line option.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.#ctor(System.String,System.String,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption"/> class.
            </summary>
            <param name="name">The name of the command line option.</param>
            <param name="description">The description of the command line option.</param>
            <param name="arity">The arity of the command line option.</param>
            <param name="isHidden">Indicates whether the command line option is hidden.</param>
            <param name="isBuiltIn">Indicates whether the command line option is built-in.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.#ctor(System.String,System.String,Microsoft.Testing.Platform.Extensions.CommandLine.ArgumentArity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption"/> class.
            </summary>
            <param name="name">The name of the command line option.</param>
            <param name="description">The description of the command line option.</param>
            <param name="arity">The arity of the command line option.</param>
            <param name="isHidden">Indicates whether the command line option is hidden.</param>
            <remarks>
            This ctor is public and used by non built-in extension, we need to know if the extension is built-in or not
            to correctly handle the --internal- prefix.
            </remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Name">
            <summary>
            Gets the name of the command line option.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Description">
            <summary>
            Gets the description of the command line option.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Arity">
            <summary>
            Gets the arity of the command line option.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.IsHidden">
            <summary>
            Gets a value indicating whether the command line option is hidden.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.Equals(Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider">
            <summary>
            Represents an interface for providing command line options.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider.GetCommandLineOptions">
            <summary>
            Gets the command line options provided by this extension.
            </summary>
            <returns>The collection of command line options.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider.ValidateOptionArgumentsAsync(Microsoft.Testing.Platform.Extensions.CommandLine.CommandLineOption,System.String[])">
            <summary>
            Validate the arguments for the given command option.
            </summary>
            <param name="commandOption">The command option.</param>
            <param name="arguments">The arguments provided for the command option.</param>
            <returns>The result of the validation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider.ValidateCommandLineOptionsAsync(Microsoft.Testing.Platform.CommandLine.ICommandLineOptions)">
            <summary>
            Validate that the command line options are valid in the context of each other.
            </summary>
            <param name="commandLineOptions">All command line options (including the ones provided by other extensions) are provided.</param>
            <returns>The result of the validation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1">
            <summary>
            Represents a factory for creating composite extensions.
            </summary>
            <typeparam name="TExtension">The type of the extension.</typeparam>
            <remarks>
            This helper type is used to create a composite extension that is composed of multiple extensions without having to
            handle either the communication between the extensions or the lifetime of the extensions instances.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.#ctor(System.Func{System.IServiceProvider,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1"/> class.
            </summary>
            <param name="factory">The factory function that creates the extension with a service provider.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1"/> class.
            </summary>
            <param name="factory">The factory function that creates the extension.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.System#ICloneable#Clone">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory`1.Microsoft#Testing#Platform#Extensions#ICompositeExtensionFactory#GetInstance(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.IAsyncCleanableExtension">
            <summary>
            Represents an interface for asynchronously cleaning up resources.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.IAsyncCleanableExtension.CleanupAsync">
            <summary>
            Asynchronously cleans up the resources.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.IAsyncInitializableExtension">
            <summary>
            Represents an interface for asynchronously initializing an extension.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.IAsyncInitializableExtension.InitializeAsync">
            <summary>
            Asynchronously initializes the extension.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.IExtension">
            <summary>
            The interface that all extensions must implement. Extensions are a special kind of
            services that have some identity.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.Uid">
            <summary>
            Gets the unique identifier for the extension.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.Version">
            <summary>
            Gets the version of the extension (ideally semantic version).
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.DisplayName">
            <summary>
            Gets the display name of the extension.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.IExtension.Description">
            <summary>
            Gets the description of the extension.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.IExtension.IsEnabledAsync">
            <summary>
            Controls whether the extension is enabled or not. This is useful for extensions
            that are always registered but only enabled when certain conditions are met.
            For example, an extension that would want to be run only when its associated
            command line option is provided by the user.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.ValidationResult">
            <summary>
            Represents the result of a validation operation.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.ValidationResult.ValidTask">
            <summary>
            Gets a task that represents a valid validation result.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.ValidationResult.IsValid">
            <summary>
            Gets a value indicating whether the validation result is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.ValidationResult.ErrorMessage">
            <summary>
            Gets the error message associated with an invalid validation result.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.ValidationResult.Valid">
            <summary>
            Creates a valid validation result.
            </summary>
            <returns>A valid validation result.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.ValidationResult.Invalid(System.String)">
            <summary>
            Creates an invalid validation result with the specified error message.
            </summary>
            <param name="errorMessage">The error message.</param>
            <returns>An invalid validation result.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.ValidationResult.InvalidTask(System.String)">
            <summary>
            Creates a task that represents an invalid validation result with the specified error message.
            </summary>
            <param name="errorMessage">The error message.</param>
            <returns>A task that represents an invalid validation result.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid">
            <summary>
            Represents data with a session UID.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid.#ctor(System.String,System.String,Microsoft.Testing.Platform.TestHost.SessionUid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid"/> class.
            </summary>
            <param name="displayName">The display name of the data.</param>
            <param name="description">The description of the data.</param>
            <param name="sessionUid">The session UID.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid.SessionUid">
            <summary>
            Gets the session UID.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.DataWithSessionUid.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact">
            <summary>
            Represents a file artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact.#ctor(System.IO.FileInfo,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact"/> class.
            </summary>
            <param name="fileInfo">The file information.</param>
            <param name="displayName">The display name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact.FileInfo">
            <summary>
            Gets the file information.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FileArtifact.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact">
            <summary>
            Represents a session file artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact.#ctor(Microsoft.Testing.Platform.TestHost.SessionUid,System.IO.FileInfo,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact"/> class.
            </summary>
            <param name="sessionUid">The session UID.</param>
            <param name="fileInfo">The file information.</param>
            <param name="displayName">The display name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact.FileInfo">
            <summary>
            Gets the file information.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.SessionFileArtifact.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact">
            <summary>
            Represents a test node file artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.#ctor(Microsoft.Testing.Platform.TestHost.SessionUid,Microsoft.Testing.Platform.Extensions.Messages.TestNode,System.IO.FileInfo,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact"/> class.
            </summary>
            <param name="sessionUid">The session UID.</param>
            <param name="testNode">The test node.</param>
            <param name="fileInfo">The file information.</param>
            <param name="displayName">The display name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.TestNode">
            <summary>
            Gets the test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.IData">
            <summary>
            Represents the data interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.IData.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.IData.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.IDataProducer">
            <summary>
            Represents a data producer extension.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.IDataProducer.DataTypesProduced">
            <summary>
            Gets the types of data produced by the data producer.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.IProperty">
            <summary>
            The interface that every test node property must implement.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty">
            <summary>
            Node property that represents a key-value pair.
            </summary>
            <param name="Key">Key name.</param>
            <param name="Value">Key value.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.#ctor(System.String,System.String)">
            <summary>
            Node property that represents a key-value pair.
            </summary>
            <param name="Key">Key name.</param>
            <param name="Value">Key value.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Key">
            <summary>Key name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Value">
            <summary>Key value.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty">
            <summary>
            Base class for test node state properties.
            </summary>
            <param name="Explanation">Textual explanation of the node state.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.#ctor(System.String)">
            <summary>
            Base class for test node state properties.
            </summary>
            <param name="Explanation">Textual explanation of the node state.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.Explanation">
            <summary>Textual explanation of the node state.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty">
            <summary>
            Property that represents test node that has been discovered.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents test node that has been discovered.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty.CachedInstance">
            <summary>
            Gets cached instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty">
            <summary>
            Property that represents a test node that is being executed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents a test node that is being executed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty.CachedInstance">
            <summary>
            Gets cached instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.PassedTestNodeStateProperty">
            <summary>
            Property that represents a test node that has been executed and passed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.PassedTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents a test node that has been executed and passed.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.SkippedTestNodeStateProperty">
            <summary>
            Property that represents a test node that has been skipped.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.SkippedTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Property that represents a test node that has been skipped.
            </summary>
            <param name="Explanation">Textual explanation of the node.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty">
            <summary>
            Property that represents a test node that has been failed.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Failure explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Failure exception.</param>
            <param name="explanation">Failure explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FailedTestNodeStateProperty.Exception">
            <summary>
            Gets the failure exception.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty">
            <summary>
            Property that represents an eventual error in the test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Error explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Error exception.</param>
            <param name="explanation">Error explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.ErrorTestNodeStateProperty.Exception">
            <summary>
            Gets the error exception.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty">
            <summary>
            Property that represents an eventual timeout in the test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Timeout explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Timeout exception.</param>
            <param name="explanation">Timeout explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.Exception">
            <summary>
            Gets get the timeout exception.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimeoutTestNodeStateProperty.Timeout">
            <summary>
            Gets get the timeout Timespan.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty">
            <summary>
            Property that represents an eventual cancellation of a test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty"/> class.
            </summary>
            <param name="explanation">Cancellation explanation.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty"/> class.
            </summary>
            <param name="exception">Cancellation exception.</param>
            <param name="explanation">Cancellation explanation.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.CancelledTestNodeStateProperty.Exception">
            <summary>
            Gets the cancellation exception.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo">
            <summary>
            Information about the timing of a test node.
            </summary>
            <param name="StartTime">Test start time.</param>
            <param name="EndTime">Test end time.</param>
            <param name="Duration">Total test duration.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.#ctor(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan)">
            <summary>
            Information about the timing of a test node.
            </summary>
            <param name="StartTime">Test start time.</param>
            <param name="EndTime">Test end time.</param>
            <param name="Duration">Total test duration.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.StartTime">
            <summary>Test start time.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.EndTime">
            <summary>Test end time.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.Duration">
            <summary>Total test duration.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo">
            <summary>
            Information about the timing of a test node step.
            </summary>
            <param name="Id">Step identifier.</param>
            <param name="Description">Step description.</param>
            <param name="Timing">Step timing info.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.#ctor(System.String,System.String,Microsoft.Testing.Platform.Extensions.Messages.TimingInfo)">
            <summary>
            Information about the timing of a test node step.
            </summary>
            <param name="Id">Step identifier.</param>
            <param name="Description">Step description.</param>
            <param name="Timing">Step timing info.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Id">
            <summary>Step identifier.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Description">
            <summary>Step description.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Timing">
            <summary>Step timing info.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty">
            <summary>
            Property that represents the timing of a test node.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.#ctor(Microsoft.Testing.Platform.Extensions.Messages.TimingInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty"/> class.
            </summary>
            <param name="globalTiming">Timing info.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.#ctor(Microsoft.Testing.Platform.Extensions.Messages.TimingInfo,Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty"/> class.
            </summary>
            <param name="globalTiming">Timing info.</param>
            <param name="stepTimings">Steps timing.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.GlobalTiming">
            <summary>
            Gets the global timing info.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TimingProperty.StepTimings">
            <summary>
            Gets the steps timing info.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.LinePosition">
            <summary>
            Line position in a file.
            </summary>
            <param name="Line">Line number.</param>
            <param name="Column">Column number.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.LinePosition.#ctor(System.Int32,System.Int32)">
            <summary>
            Line position in a file.
            </summary>
            <param name="Line">Line number.</param>
            <param name="Column">Column number.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePosition.Line">
            <summary>Line number.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePosition.Column">
            <summary>Column number.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan">
            <summary>
            Line position span in a file.
            </summary>
            <param name="Start">Start line position.</param>
            <param name="End">End line position.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.#ctor(Microsoft.Testing.Platform.Extensions.Messages.LinePosition,Microsoft.Testing.Platform.Extensions.Messages.LinePosition)">
            <summary>
            Line position span in a file.
            </summary>
            <param name="Start">Start line position.</param>
            <param name="End">End line position.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.Start">
            <summary>Start line position.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.End">
            <summary>End line position.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty">
            <summary>
            Base property that represents a file location.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.#ctor(System.String,Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan)">
            <summary>
            Base property that represents a file location.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.FilePath">
            <summary>File path.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.LineSpan">
            <summary>Line position.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestFileLocationProperty">
            <summary>
            Property that represents a file location for a test node.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestFileLocationProperty.#ctor(System.String,Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan)">
            <summary>
            Property that represents a file location for a test node.
            </summary>
            <param name="FilePath">File path.</param>
            <param name="LineSpan">Line position.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty">
            <summary>
            Property that uniquely identifies a test method. Values are ECMA-335 compliant.
            </summary>
            <param name="AssemblyFullName">Assembly full name.</param>
            <param name="Namespace">Namespace.</param>
            <param name="TypeName">Type name.</param>
            <param name="MethodName">Method name.</param>
            <param name="ParameterTypeFullNames">Parameter type full name.</param>
            <param name="ReturnTypeFullName">Return type full name.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.#ctor(System.String,System.String,System.String,System.String,System.String[],System.String)">
            <summary>
            Property that uniquely identifies a test method. Values are ECMA-335 compliant.
            </summary>
            <param name="AssemblyFullName">Assembly full name.</param>
            <param name="Namespace">Namespace.</param>
            <param name="TypeName">Type name.</param>
            <param name="MethodName">Method name.</param>
            <param name="ParameterTypeFullNames">Parameter type full name.</param>
            <param name="ReturnTypeFullName">Return type full name.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.AssemblyFullName">
            <summary>Assembly full name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.Namespace">
            <summary>Namespace.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.TypeName">
            <summary>Type name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.MethodName">
            <summary>Method name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.ParameterTypeFullNames">
            <summary>Parameter type full name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.ReturnTypeFullName">
            <summary>Return type full name.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty">
            <summary>
            Property that represents a generic test metadata property.
            </summary>
            <param name="Key">Key name.</param>
            <param name="Value">Value name.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.#ctor(System.String,System.String)">
            <summary>
            Property that represents a generic test metadata property.
            </summary>
            <param name="Key">Key name.</param>
            <param name="Value">Value name.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.Key">
            <summary>Key name.</summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.Value">
            <summary>Value name.</summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer">
            <summary>
            Represents a data consumer that can consume data produced by a data producer.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer.DataTypesConsumed">
            <summary>
            Gets the types of data consumed by the data consumer.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer.ConsumeAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer,Microsoft.Testing.Platform.Extensions.Messages.IData,System.Threading.CancellationToken)">
            <summary>
            Consumes the specified data produced by a data producer.
            </summary>
            <param name="dataProducer">The data producer.</param>
            <param name="value">The data to be consumed.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks">
            <summary>
            Represents the interface for test application lifecycle callbacks.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks.BeforeRunAsync(System.Threading.CancellationToken)">
            <summary>
            Executes before the test run.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks.AfterRunAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Executes after the test run.
            </summary>
            <param name="exitCode">The exit code of the test run.</param>
            <param name="cancellation">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.ITestHostExtension">
            <summary>
            Represents a test host specialized extension.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler">
            <summary>
            Represents an interface for handling the lifetime of a test session.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionStartingAsync(Microsoft.Testing.Platform.TestHost.SessionUid,System.Threading.CancellationToken)">
            <summary>
            Called when a test session is starting.
            </summary>
            <param name="sessionUid">The unique identifier of the session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionFinishingAsync(Microsoft.Testing.Platform.TestHost.SessionUid,System.Threading.CancellationToken)">
            <summary>
            Called when a test session is finishing.
            </summary>
            <param name="sessionUid">The unique identifier of the session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer">
            <summary>
            Represents a producer of data that will be directed to the output device.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext">
            <summary>
            Context passed to a test framework adapter when <see cref="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CloseTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext)"/> is called.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext.CancellationToken">
            <summary>
            Gets the cancellation token used to cancel the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult">
            <summary>
            Represents the result of closing a test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult.WarningMessage">
            <summary>
            Gets or sets the warning message associated with the test session closing.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult.ErrorMessage">
            <summary>
            Gets or sets the error message associated with the test session closing.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionResult.IsSuccess">
            <summary>
            Gets or sets a value indicating whether the test session closing was successful.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext">
            <summary>
            Context passed to a test framework adapter when <see cref="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CreateTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext)"/> is called.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext.CancellationToken">
            <summary>
            Gets the cancellation token used to cancel the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult">
            <summary>
            Represents the result of creating a test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult.WarningMessage">
            <summary>
            Gets or sets the warning message, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult.ErrorMessage">
            <summary>
            Gets or sets the error message, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionResult.IsSuccess">
            <summary>
            Gets or sets a value indicating whether the test session creation was successful.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext">
            <summary>
            This class represents the context that is passed to a test framework adapter when the <see cref="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.ExecuteRequestAsync(Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext)"/> method is called.
            </summary>
            <remarks>
            It contains information about the request, message bus, semaphore, and cancellation token.
            </remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.Request">
            <summary>
            Gets the request associated with the execution.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.MessageBus">
            <summary>
            Gets the message bus used for reporting test execution events.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.CancellationToken">
            <summary>
            Gets the cancellation token that can be used to cancel the execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext.Complete">
            <summary>
            Completes the execution request.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework">
            <summary>
            A specialized extension that represents a test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CreateTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CreateTestSessionContext)">
            <summary>
            Ask to the test framework to create a test session.
            </summary>
            <param name="context">The test session creation context.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.ExecuteRequestAsync(Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext)">
            <summary>
            Ask to the test framework to execute a test execution request.
            </summary>
            <param name="context">The test execution request context.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestFramework.ITestFramework.CloseTestSessionAsync(Microsoft.Testing.Platform.Extensions.TestFramework.CloseTestSessionContext)">
            <summary>
            Ask to the test framework to destroy the test session and release all the resources.
            </summary>
            <param name="context">The test session destruction context.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable">
            <summary>
            Represents an environment variable.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
            <param name="isSecret">Indicates whether the environment variable is a secret.</param>
            <param name="isLocked">Indicates whether the environment variable is locked.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Represents an environment variable.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
            <param name="isSecret">Indicates whether the environment variable is a secret.</param>
            <param name="isLocked">Indicates whether the environment variable is locked.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.Variable">
            <summary>
            Gets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.Value">
            <summary>
            Gets the value of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.IsSecret">
            <summary>
            Gets a value indicating whether the environment variable is a secret.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable.IsLocked">
            <summary>
            Gets a value indicating whether the environment variable is locked.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables">
            <summary>
            Represents an interface for managing environment variables.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables.SetVariable(Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable)">
            <summary>
            Sets the value of the specified environment variable.
            </summary>
            <param name="environmentVariable">The environment variable to set.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables.RemoveVariable(System.String)">
            <summary>
            Removes the specified environment variable.
            </summary>
            <param name="variable">The name of the environment variable to remove.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.IReadOnlyEnvironmentVariables">
            <summary>
            Represents an interface for reading environment variables.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.IReadOnlyEnvironmentVariables.TryGetVariable(System.String,Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable@)">
            <summary>
            Tries to get the value of the specified environment variable.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <param name="environmentVariable">When this method returns, contains the value of the environment variable, if it is found; otherwise, null.</param>
            <returns>true if the environment variable is found; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostControllersExtension">
            <summary>
            Represents an extension for test host controllers.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider">
            <summary>
            Represents an interface for providing environment variables to the test host.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider.UpdateAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.IEnvironmentVariables)">
            <summary>
            Updates the environment variables for the test host asynchronously.
            </summary>
            <param name="environmentVariables">The environment variables to update.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider.ValidateTestHostEnvironmentVariablesAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.IReadOnlyEnvironmentVariables)">
            <summary>
            Validates the test host environment variables asynchronously.
            </summary>
            <param name="environmentVariables">The environment variables to validate.</param>
            <returns>A task representing the asynchronous operation and containing the validation result.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation">
            <summary>
            Represents information about a test host process.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation.PID">
            <summary>
            Gets the process ID of the test host.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation.ExitCode">
            <summary>
            Gets the exit code of the test host process.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation.HasExitedGracefully">
            <summary>
            Gets a value indicating whether the test host process has exited gracefully.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler">
            <summary>
            Represents an interface for handling the lifetime of the test host process.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler.BeforeTestHostProcessStartAsync(System.Threading.CancellationToken)">
            <summary>
            Executes before the test host process starts.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler.OnTestHostProcessStartedAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation,System.Threading.CancellationToken)">
            <summary>
            Executes when the test host process has started.
            </summary>
            <param name="testHostProcessInformation">Information about the test host process.</param>
            <param name="cancellation">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler.OnTestHostProcessExitedAsync(Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessInformation,System.Threading.CancellationToken)">
            <summary>
            Executes when the test host process has exited.
            </summary>
            <param name="testHostProcessInformation">Information about the test host process.</param>
            <param name="cancellation">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable">
            <summary>
            Represents an owned environment variable.
            </summary>
            <remarks>
            This class extends the <see cref="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable"/> class and adds an owner property.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable.#ctor(Microsoft.Testing.Platform.Extensions.IExtension,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Represents an owned environment variable.
            </summary>
            <remarks>
            This class extends the <see cref="T:Microsoft.Testing.Platform.Extensions.TestHostControllers.EnvironmentVariable"/> class and adds an owner property.
            </remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Extensions.TestHostControllers.OwnedEnvironmentVariable.Owner">
            <summary>
            Gets the owner of the environment variable.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.CommandLine.ICommandLineManager">
            <summary>
            Represents a command line manager.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineManager.AddProvider(System.Func{Microsoft.Testing.Platform.Extensions.CommandLine.ICommandLineOptionsProvider})">
            <summary>
            Adds a command line options provider.
            </summary>
            <param name="commandLineProviderFactory">The factory method for creating the command line options provider.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.CommandLine.ICommandLineOptions">
            <summary>
            Represents the interface for command line options.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineOptions.IsOptionSet(System.String)">
            <summary>
            Checks if the specified option is set.
            </summary>
            <param name="optionName">The name of the option.</param>
            <returns>True if the option is set; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.ICommandLineOptions.TryGetOptionArgumentList(System.String,System.String[]@)">
            <summary>
            Tries to get the argument list for the specified option.
            </summary>
            <param name="optionName">The name of the option.</param>
            <param name="arguments">The argument list for the option, if found.</param>
            <returns>True if the argument list is found; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.CommandLineParser.Parse(System.String[],Microsoft.Testing.Platform.Helpers.IEnvironment)">
             <summary>
             Options parser support:
                 * Only - and -- prefix for options https://learn.microsoft.com/dotnet/standard/commandline/syntax#options
                 * Multiple option arguments https://learn.microsoft.com/dotnet/standard/commandline/syntax#multiple-arguments
                 * Use a space, '=', or ':' as the delimiter between an option name and its argument
                 * escape with \
                 * surrounding with ""
                 * surrounding with ''
            
             Options parser doesn't support
                 * Default argument/commands/verb
                 * Alias https://learn.microsoft.com/dotnet/standard/commandline/syntax#aliases
                 * Case sensitivity https://learn.microsoft.com/dotnet/standard/commandline/syntax#case-sensitivity
                 * -- token https://learn.microsoft.com/dotnet/standard/commandline/syntax#the----token
            
             https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_02_03
             https://learn.microsoft.com/cpp/c-language/parsing-c-command-line-arguments?view=msvc-170
             Double-Quotes: we don't support for now
                 * The dollar-sign shall retain its special meaning introducing parameter expansion
                 * The backquote shall retain its special meaning introducing the other form of command substitution
                 * A POSIX convention lets you omit the delimiter when you are specifying a single-character option alias, i.e. myapp -vquiet.
             </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.PlatformCommandLineProvider.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.CommandLine.TreeNodeFilterCommandLineOptionsProvider.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions">
            <summary>
            Provides extension methods for the IConfiguration interface.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetTestResultDirectory(Microsoft.Testing.Platform.Configurations.IConfiguration)">
            <summary>
            Gets the test result directory from the configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The test result directory.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetCurrentWorkingDirectory(Microsoft.Testing.Platform.Configurations.IConfiguration)">
            <summary>
            Gets the current working directory from the configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The current working directory.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetTestHostWorkingDirectory(Microsoft.Testing.Platform.Configurations.IConfiguration)">
            <summary>
            Gets the test host working directory from the configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The test host working directory.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Configurations.IConfiguration">
            <summary>
            Represents a configuration interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.IConfiguration.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Configurations.JsonConfigurationFileParser">
            <summary>
            Taken and adapted from https://github.com/dotnet/runtime/blob/main/src/libraries/Microsoft.Extensions.Configuration.Json/src/JsonConfigurationFileParser.cs
            We added also the _propertyToAllChildren dictionary to keep the whole json structure because we don't support by default the serialization/deserialization
            and we need to keep the whole json structure per json property to be able to easily serialize it to some other format.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Configurations.JsonConfigurationSource.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.ExitCodes">
            <summary>
            We use positive exit codes for failure because POSIX/BASH exit codes are unsigned 8-bit integers.
            On POSIX systems the standard exit code is 0 for success and any number from 1 to 255 for anything else.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.FNV_1aHashHelper.ComputeStringHash(System.String)">
            <summary>
            Computes a hash of the string using the FNV-1a algorithm.
            Used by Roslyn.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.ObjectPool`1">
             <summary>
             Generic implementation of object pooling pattern with predefined pool size limit. The main
             purpose is that limited number of frequently used objects can be kept in the pool for
             further recycling.
            
             Notes:
             1) it is not the goal to keep all returned objects. Pool is not meant for storage. If there
                is no space in the pool, extra returned objects will be dropped.
            
             2) it is implied that if object was obtained from a pool, the caller will return it back in
                a relatively short time. Keeping checked out objects for long durations is ok, but
                reduces usefulness of pooling. Just new up your own.
            
             Not returning objects to the pool in not detrimental to the pool's work, but is a bad practice.
             Rationale:
                If there is no intent for reusing the object, do not use pool - just use "new".
             </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.ObjectPool`1.Factory">
            <remarks>
            Not using System.Func{T} because this file is linked into the (debugger) Formatter,
            which does not have that type (since it compiles against .NET 2.0).
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.ObjectPool`1.Allocate">
            <summary>
            Produces an instance.
            </summary>
            <remarks>
            Search strategy is a simple linear probing which is chosen for it cache-friendliness.
            Note that Free will try to store recycled objects close to the start thus statistically
            reducing how far we will typically search.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.ObjectPool`1.Free(`0,System.Threading.CancellationToken)">
            <summary>
            Returns objects to the pool.
            </summary>
            <remarks>
            Search strategy is a simple linear probing which is chosen for it cache-friendliness.
            Note that Free will try to store recycled objects close to the start thus statistically
            reducing how far we will typically search in Allocate.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.ObjectPool`1.ForgetTrackedObject(`0,`0)">
             <summary>
             Removes an object from leak tracking.
            
             This is called when an object is returned to the pool.  It may also be explicitly
             called if an object allocated from the pool is intentionally not being returned
             to the pool.  This can be of use with pooled arrays if the consumer wants to
             return a larger array to the pool than was originally allocated.
             </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Helpers.IConsole">
            <summary>
            Wraps the static System.Console to be isolatable in tests.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Helpers.TimeoutHelper.DefaultHangTimeoutMilliseconds">
            <summary>
            Gets defaultAntiHangTimeout* values are used as timeout for every wait operation in the test platform.
            Are not intended for any timeout logic, but only to avoid infinite waits in case of test platform hangs.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Helpers.TimeSpanParser.GetRegex">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ "value" capture group.<br/>
                ○ Match if at the beginning of the string.<br/>
                ○ Match a Unicode digit greedily at least once.<br/>
                ○ Optional (greedy).<br/>
                    ○ Match '.'.<br/>
                    ○ Match a Unicode digit atomically at least once.<br/>
            ○ Match a whitespace character greedily any number of times.<br/>
            ○ "suffix" capture group.<br/>
                ○ Match with 4 alternative expressions.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Mm].<br/>
                        ○ Match a character in the set [Ss].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Mm].<br/>
                        ○ Match a character in the set [Ii].<br/>
                        ○ Match a character in the set [Ll].<br/>
                    ○ Match a character in the set [DHMdhm].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Ss] greedily, optionally.<br/>
                        ○ Match a character in the set [A-Za-z\u212A] atomically any number of times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynDebug.Assert(System.Boolean)">
            <inheritdoc cref="M:System.Diagnostics.Debug.Assert(System.Boolean)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynDebug.Assert(System.Boolean,System.String)">
            <inheritdoc cref="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynString.IsNullOrEmpty(System.String)">
            <inheritdoc cref="M:System.String.IsNullOrEmpty(System.String)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.RoslynString.IsNullOrWhiteSpace(System.String)">
            <inheritdoc cref="M:System.String.IsNullOrWhiteSpace(System.String)"/>
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.ServerTestHost.HandleMessagesAsync">
            <summary>
            The main server loop.
            It receives messages from the client and then runs a corresponding handler.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ServerTestHost.RpcInvocationState.CompletionSource">
            <remarks>
            For outbound requests, this is populated with the response from the client.
            For inbound requests, this is set when the invoked request is completed
            in <see cref="M:Microsoft.Testing.Platform.Hosts.ServerTestHost.HandleRequestAsync(Microsoft.Testing.Platform.ServerMode.RequestMessage,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Testing.Platform.Hosts.ServerTestHost.TestNodeStateChangeAggregator">
             <summary>
             Aggregates multiple <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeUpdateMessage"/> events
             into a single <see cref="T:Microsoft.Testing.Platform.ServerMode.TestNodeStateChangedEventArgs"/>.
            
             This is done to minimize the number of RPC messages sent.
             </summary>
             <remarks>The caller needs to ensure thread-safety.</remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.ServerTestHost.TestNodeStateChangeAggregator.#ctor(System.Guid)">
             <summary>
             Aggregates multiple <see cref="T:Microsoft.Testing.Platform.Extensions.Messages.TestNodeUpdateMessage"/> events
             into a single <see cref="T:Microsoft.Testing.Platform.ServerMode.TestNodeStateChangedEventArgs"/>.
            
             This is done to minimize the number of RPC messages sent.
             </summary>
             <remarks>The caller needs to ensure thread-safety.</remarks>
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.TestFrameworkProxy.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Hosts.ToolsTestHost.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Hosts.ToolsTestHost.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.IPC.NamedPipeServer.InternalLoopAsync(System.Threading.CancellationToken)">
            <summary>
            4 bytes = message size
            ------- Payload -------
            4 bytes = serializer id
            x bytes = object buffer.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ILogger">
            <summary>
            Represents a logger that can be used for logging messages.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILogger.LogAsync``1(Microsoft.Testing.Platform.Logging.LogLevel,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Asynchronously logs a message with the specified log level, state, exception, and formatter.
            </summary>
            <typeparam name="TState">The type of the state object.</typeparam>
            <param name="logLevel">The log level of the message.</param>
            <param name="state">The state object.</param>
            <param name="exception">The exception associated with the message.</param>
            <param name="formatter">The formatter function to format the message.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILogger.Log``1(Microsoft.Testing.Platform.Logging.LogLevel,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Logs a message with the specified log level, state, exception, and formatter.
            </summary>
            <typeparam name="TState">The type of the state object.</typeparam>
            <param name="logLevel">The log level of the message.</param>
            <param name="state">The state object.</param>
            <param name="exception">The exception associated with the message.</param>
            <param name="formatter">The formatter function to format the message.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILogger.IsEnabled(Microsoft.Testing.Platform.Logging.LogLevel)">
            <summary>
            Checks if the logger is enabled for the specified log level.
            </summary>
            <param name="logLevel">The log level to check.</param>
            <returns>True if the logger is enabled for the specified log level, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ILogger`1">
            <summary>
            Represents a logger that can be used for logging messages with a specific category.
            </summary>
            <typeparam name="TCategoryName">The type of the category name.</typeparam>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ILoggerFactory">
            <summary>
            Represents a factory for creating loggers.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.ILoggerFactory.CreateLogger(System.String)">
            <summary>
            Creates a logger with the specified category name.
            </summary>
            <param name="categoryName">The name of the category for the logger.</param>
            <returns>A new instance of the logger.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.LoggerFactoryExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Testing.Platform.Logging.ILoggerFactory"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Testing.Platform.Logging.ILoggerFactory)">
            <summary>
            Creates a logger instance for the specified category name.
            </summary>
            <typeparam name="TCategoryName">The type of the category name.</typeparam>
            <param name="factory">The logger factory.</param>
            <returns>A logger instance.</returns>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Trace">
            <summary>
            Logs that contain the most detailed messages.
            These messages may contain sensitive application data. These messages are disabled by default and should never be enabled in a production environment.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Debug">
            <summary>
            Logs that are used for interactive investigation during development.
            These logs should primarily contain information useful for debugging and have no long-term value.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Information">
            <summary>
            Logs that track the general flow of the application.
            These logs should have long-term value.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Warning">
            <summary>
            Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Error">
            <summary>
            Logs that highlight when the current flow of execution is stopped due to a failure.
            These should indicate a failure in the current activity, not an application-wide failure.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.Critical">
            <summary>
            Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires immediate attention.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Logging.LogLevel.None">
            <summary>
            Not used for writing log messages. Specifies that a logging category should not write any messages.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.ServerLoggerForwarder">
            <summary>
            This logger forwards the messages back to the server host so that they're
            logged over RPC back to the client.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Logging.TypeNameHelper">
            <summary>
            Borrowed from https://github.com/dotnet/runtime/blob/main/src/libraries/Common/src/Extensions/TypeNameHelper/TypeNameHelper.cs.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Logging.TypeNameHelper.GetTypeDisplayName(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Char)">
            <summary>
            Pretty print a type name.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <param name="fullName"><c>true</c> to print a fully qualified name.</param>
            <param name="includeGenericParameterNames"><c>true</c> to include generic parameter names.</param>
            <param name="includeGenericParameters"><c>true</c> to include generic parameters.</param>
            <param name="nestedTypeDelimiter">Character to use as a delimiter in nested type names.</param>
            <returns>The pretty printed type name.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Messages.IMessageBus">
            <summary>
            Represents a message bus for publishing data.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Messages.IMessageBus.PublishAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer,Microsoft.Testing.Platform.Extensions.Messages.IData)">
            <summary>
            Publishes the specified data using the provided data producer.
            </summary>
            <param name="dataProducer">The data producer.</param>
            <param name="data">The data to be published.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics">
            <summary>
            Represents the test outcome and its retry execution statistics.
            </summary>
            <param name="HasPassed"> The test's single outcome or its final outcome. </param>
            <param name="TotalPassedRetries"> The number of times the adapter reported a Passed outcome when retrying. </param>
            <param name="TotalFailedRetries"> The number of times the adapter reported a Failed outcome when retrying. </param>
        </member>
        <member name="M:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.#ctor(System.Boolean,System.Int64,System.Int64)">
            <summary>
            Represents the test outcome and its retry execution statistics.
            </summary>
            <param name="HasPassed"> The test's single outcome or its final outcome. </param>
            <param name="TotalPassedRetries"> The number of times the adapter reported a Passed outcome when retrying. </param>
            <param name="TotalFailedRetries"> The number of times the adapter reported a Failed outcome when retrying. </param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.HasPassed">
            <summary> The test's single outcome or its final outcome. </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.TotalPassedRetries">
            <summary> The number of times the adapter reported a Passed outcome when retrying. </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Messages.TestNodeStateStatistics.TotalFailedRetries">
            <summary> The number of times the adapter reported a Failed outcome when retrying. </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.DisplayAsync(Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer,Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData)">
            <summary>
            Displays provided data through IConsole, which is typically System.Console.
            </summary>
            <param name="producer">The producer that sent the data.</param>
            <param name="data">The data to be displayed.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.ConsoleOutputDevice.ToHumanReadableDuration(System.Nullable{System.Double})">
            <summary>
            Convert duration property text to human readable duration.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData">
            <summary>
            Represents the data for a formatted text output device.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData"/> class with the specified text.
            </summary>
            <param name="text">The text to be displayed.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.ForegroundColor">
            <summary>
            Gets or inits the foreground color of the text.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.FormattedTextOutputDeviceData.BackgroundColor">
            <summary>
            Gets or inits the background color of the text.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.IColor">
            <summary>
            Represents a color.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.IOutputDevice">
            <summary>
            Represents an output device.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.IOutputDevice.DisplayAsync(Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer,Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData)">
            <summary>
            Displays the output data asynchronously.
            </summary>
            <param name="producer">The data producer.</param>
            <param name="data">The output data.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData">
            <summary>
            Represents the data for an output device.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.SystemConsoleColor">
            <summary>
            Represents a system console color.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.SystemConsoleColor.ConsoleColor">
            <summary>
            Gets or inits the console color.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData">
            <summary>
            Represents a text data for directed to the output device.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData"/> class with the specified text.
            </summary>
            <param name="text">The text for the output device.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.OutputDevice.TextOutputDeviceData.Text">
            <summary>
            Gets the text for the output device.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest">
            <summary>
            Represents a request to discover test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext,Microsoft.Testing.Platform.Requests.ITestExecutionFilter)">
            <summary>
            Represents a request to discover test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.DiscoverTestExecutionRequest"/> class.
            </summary>
            <param name="session">The test session context.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.IRequest">
            <summary>
            Represents a request interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.IRequest.Session">
            <summary>
            Gets the test session context.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.ITestExecutionFilter">
            <summary>
            Represents a filter for test execution.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest">
            <summary>
            Represents a request to run test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext,Microsoft.Testing.Platform.Requests.ITestExecutionFilter)">
            <summary>
            Represents a request to run test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.RunTestExecutionRequest"/> class.
            </summary>
            <param name="session">The test session context.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.TestExecutionRequest">
            <summary>
            Represents a request for test execution.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TestExecutionRequest.#ctor(Microsoft.Testing.Platform.TestHost.TestSessionContext,Microsoft.Testing.Platform.Requests.ITestExecutionFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.TestExecutionRequest"/> class.
            </summary>
            <param name="session">The test session context.</param>
            <param name="filter">The test execution filter.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.TestExecutionRequest.Filter">
            <summary>
            Gets the test execution filter.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.TestExecutionRequest.Session">
            <summary>
            Gets the test session context.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter">
            <summary>
            Represents a filter based on test node UIDs.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter.#ctor(Microsoft.Testing.Platform.Extensions.Messages.TestNodeUid[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter"/> class.
            </summary>
            <param name="testNodeUids">The test node UIDs to filter.</param>
        </member>
        <member name="P:Microsoft.Testing.Platform.Requests.TestNodeUidListFilter.TestNodeUids">
            <summary>
            Gets the test node UIDs to filter.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.Not">
            <summary>
            Negate the following expression.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.And">
            <summary>
            Combine the following expressions with a logical AND.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.Or">
            <summary>
            Combine the following expressions with a logical OR.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.FilterOperator.Equals">
            <summary>
            Filter the following expression by the given property.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.None">
            <summary>
            Not an operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.Separator">
            <summary>
            A separator operator, used to separate multiple filters.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.LeftBrace">
            <summary>
            An opening brace operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.RightBrace">
            <summary>
            A closing brace operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.LeftParameter">
            <summary>
            Left hand side of a filter expression.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.RightParameter">
            <summary>
            Right hand side of a filter expression.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.FilterEquals">
            <summary>
            Filter equals operator.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.Or">
            <summary>
            Operator used for combining multiple filters with a logical OR.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.Requests.OperatorKind.And">
            <summary>
            Operator used for combining multiple filters with a logical AND.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TreeNodeFilter.ParseFilter(System.String)">
            <remarks>
            The current grammar for the filter looks as follows:
            <code>
            TREE_NODE_FILTER = EXPR ( '/' EXPR )*
            EXPR =
              '(' EXPR ')'
              | EXPR OP EXPR
              | NODE_VALUE
            FILTER_EXPR =
              '(' FILTER_EXPR ')'
              | TOKEN '=' TOKEN
              | FILTER_EXPR OP FILTER_EXPR
              | TOKEN
            OP = '&amp;' | '|'
            NODE_VALUE = TOKEN | TOKEN '[' FILTER_EXPR ']'
            TOKEN = string
            </code>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Exception thrown, if the filter is malformed, for example <c>A(|B)</c> or <c>A)</c>.
            </exception>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.TreeNodeFilter.MatchesFilter(System.String,Microsoft.Testing.Platform.Extensions.Messages.PropertyBag)">
            <summary>
            Checks whether a node path matches the tree node filter.
            </summary>
            <param name="testNodeFullPath">The segment URL encoded path.</param>
            <param name="filterableProperties">The URL encoded node properties.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.Requests.ValueAndPropertyExpression">
            <summary>
            This represents an expression that combines a value and a property expression,
            for instance <c>MethodName[Trait=Foo]</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Requests.ValueAndPropertyExpression.#ctor(Microsoft.Testing.Platform.Requests.FilterExpression,Microsoft.Testing.Platform.Requests.FilterExpression)">
            <summary>
            This represents an expression that combines a value and a property expression,
            for instance <c>MethodName[Trait=Foo]</c>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Resources.PlatformResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotCreateTestExecutionFilterErrorMessage">
            <summary>
              Looks up a localized string similar to Failed to create a test execution filter.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotCreateUniqueLogFileErrorMessage">
            <summary>
              Looks up a localized string similar to Failed to create a unique log file after 3 seconds. Lastly tried file name is &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotRemoveEnvironmentVariableAtThisStageErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot remove environment variables at this stage.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotRemoveEnvironmentVariableItIsLockedErrorMessage">
            <summary>
              Looks up a localized string similar to Extension &apos;{0}&apos; tried to remove environment variable &apos;{1}&apos; but it was locked by extension &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotSetEnvironmentVariableAtThisStageErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot set environment variables at this stage.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotSetEnvironmentVariableItIsLockedErrorMessage">
            <summary>
              Looks up a localized string similar to Extension &apos;{0}&apos; tried to set environment variable &apos;{1}&apos; but it was locked by extension &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CannotStartProcessErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot start process &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidArgumentsForOption">
            <summary>
              Looks up a localized string similar to Option &apos;--{0}&apos; has invalid arguments: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidArityErrorMessage">
            <summary>
              Looks up a localized string similar to Invalid arity, maximum must be greater than minimum.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidConfiguration">
            <summary>
              Looks up a localized string similar to Invalid configuration for provider &apos;{0}&apos; (UID: {1}). Error: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineInvalidOptionName">
            <summary>
              Looks up a localized string similar to Invalid option name &apos;{0}&apos;, it must contain only letter and &apos;-&apos; (e.g. my-option).
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionExpectsAtLeastArguments">
            <summary>
              Looks up a localized string similar to Option &apos;--{0}&apos; from provider &apos;{1}&apos; (UID: {2}) expects at least {3} arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionExpectsAtMostArguments">
            <summary>
              Looks up a localized string similar to Option &apos;--{0}&apos; from provider &apos;{1}&apos; (UID: {2}) expects at most {3} arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionExpectsNoArguments">
            <summary>
              Looks up a localized string similar to Option &apos;--{0}&apos; from provider &apos;{1}&apos; (UID: {2}) expects no arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsDeclaredByMultipleProviders">
            <summary>
              Looks up a localized string similar to Option &apos;--{0}&apos; is declared by multiple extensions: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsDeclaredByMultipleProvidersWorkaround">
            <summary>
              Looks up a localized string similar to You can fix the previous option clash by overriding the option name using the configuration file.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsReserved">
            <summary>
              Looks up a localized string similar to Option &apos;--{0}&apos; is reserved and cannot be used by providers: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineOptionIsUsingReservedPrefix">
            <summary>
              Looks up a localized string similar to Option `--{0}` from provider &apos;{1}&apos; (UID: {2}) is using the reserved prefix &apos;--internal&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedArgument">
            <summary>
              Looks up a localized string similar to Unexpected argument {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedNullArgument">
            <summary>
              Looks up a localized string similar to Unexpected null argument at index {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedSingleQuoteInArgument">
            <summary>
              Looks up a localized string similar to Unexpected single quote in argument: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineParserUnexpectedSingleQuoteInArgumentForOption">
            <summary>
              Looks up a localized string similar to Unexpected single quote in argument: {0} for option &apos;--{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CommandLineUnknownOption">
            <summary>
              Looks up a localized string similar to Unknown option &apos;--{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CompositeServiceFactoryInstanceAlreadyRegistered">
            <summary>
              Looks up a localized string similar to The same instance of &apos;CompositeExtensonFactory&apos; is already registered.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage">
            <summary>
              Looks up a localized string similar to Could not find the default json configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConnectingToClientHost">
            <summary>
              Looks up a localized string similar to Connecting to client host &apos;{0}&apos; port &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConsoleTestExecutionFilterFactoryDescription">
            <summary>
              Looks up a localized string similar to Creates the right test execution filter for console mode.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ConsoleTestExecutionFilterFactoryDisplayName">
            <summary>
              Looks up a localized string similar to Console test execution filter factory.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.CouldNotFindDirectoryErrorMessage">
            <summary>
              Looks up a localized string similar to Could not find directory &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.EnvironmentVariableProviderFailedWithError">
            <summary>
              Looks up a localized string similar to Provider &apos;{0}&apos; (UID: {1}) failed with error: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ExtensionDoesNotImplementGivenInterfaceErrorMessage">
            <summary>
              Looks up a localized string similar to Extension of type &apos;{0}&apos; is not implementing the required &apos;{1}&apos; interface.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ExtensionWithSameUidAlreadyRegisteredErrorMessage">
            <summary>
              Looks up a localized string similar to Another extension with same the same UID &apos;{0}&apos; has already been registered. Registered extension is of type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.FailedToWriteLogToChannelErrorMessage">
             <summary>
               Looks up a localized string similar to Failed to write the log to the channel. Missed log content:
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage">
            <summary>
              Looks up a localized string similar to The following &apos;ITestHostEnvironmentVariableProvider&apos; providers rejected the final environment variables setup:.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpApplicationUsage">
            <summary>
              Looks up a localized string similar to Usage {0} [option providers] [extension option providers].
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpExecuteTestApplication">
            <summary>
              Looks up a localized string similar to Execute a .NET Test Application..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpExtensionOptions">
            <summary>
              Looks up a localized string similar to Extension options:.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpNoExtensionRegistered">
            <summary>
              Looks up a localized string similar to     No extension registered..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpOptions">
            <summary>
              Looks up a localized string similar to Options:.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.HelpTestApplicationRunner">
            <summary>
              Looks up a localized string similar to &lt;test application runner&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.InternalLoopAsyncDidNotExitSuccessfullyErrorMessage">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; did not exit successfully.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.InvalidCommandLineArguments">
            <summary>
              Looks up a localized string similar to Invalid command line arguments:.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonConfigurationFileParserDuplicateKeyErrorMessage">
            <summary>
              Looks up a localized string similar to A duplicate key &apos;{0}&apos; was found.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage">
            <summary>
              Looks up a localized string similar to Top-level JSON element must be an object. Instead, &apos;{0}&apos; was found.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonConfigurationFileParserUnsupportedTokenErrorMessage">
            <summary>
              Looks up a localized string similar to Unsupported JSON token &apos;{0}&apos; was found.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonRpcTcpServerDescription">
            <summary>
              Looks up a localized string similar to JsonRpc server implementation based on the test platform protocol specification..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.JsonRpcTcpServerToSingleClientDescription">
            <summary>
              Looks up a localized string similar to JsonRpc server to client handshake, implementation based on the test platform protocol specification..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NoSerializerRegisteredWithIdErrorMessage">
            <summary>
              Looks up a localized string similar to No serializer registered with ID &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NoSerializerRegisteredWithTypeErrorMessage">
            <summary>
              Looks up a localized string similar to No serializer registered with type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NotAvailable">
            <summary>
              Looks up a localized string similar to Not available.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.NotFound">
            <summary>
              Looks up a localized string similar to Not found.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineClientHostOptionDescription">
            <summary>
              Looks up a localized string similar to Specify the hostname of the client..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineClientPortOptionDescription">
            <summary>
              Looks up a localized string similar to Specify the port of the client..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticFileLoggerSynchronousWriteOptionDescription">
            <summary>
              Looks up a localized string similar to Force the built-in file logger to write the log synchronously. Useful for scenario where you don&apos;t want to lose any log (i.e. in case of crash). Note that this is slowing down the test execution..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOptionDescription">
            <summary>
              Looks up a localized string similar to Enable the diagnostic logging. The default log level is &apos;Trace&apos;. The file will be written in the output directory with the name log_[MMddHHssfff].diag.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOptionExpectsSingleArgumentErrorMessage">
            <summary>
              Looks up a localized string similar to &apos;--diagnostic-verbosity&apos; expects a single level argument (&apos;Trace&apos;, &apos;Debug&apos;, &apos;Information&apos;, &apos;Warning&apos;, &apos;Error&apos;, or &apos;Critical&apos;).
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOptionIsMissing">
            <summary>
              Looks up a localized string similar to &apos;--{0}&apos; requires &apos;--diagnostic&apos; to be provided.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOutputDirectoryOptionDescription">
            <summary>
              Looks up a localized string similar to Output directory of the diagnostic logging, if not specified the file will be generated inside the default &apos;TestResults&apos; directory..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticOutputFilePrefixOptionDescription">
            <summary>
              Looks up a localized string similar to Prefix for the log file name that will replace &apos;[log]_.&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiagnosticVerbosityOptionDescription">
            <summary>
              Looks up a localized string similar to Define the level of the verbosity for the --diagnostic. The available values are &apos;Trace&apos;, &apos;Debug&apos;, &apos;Information&apos;, &apos;Warning&apos;, &apos;Error&apos;, and &apos;Critical&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineDiscoverTestsOptionDescription">
            <summary>
              Looks up a localized string similar to List available tests..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineExitOnProcessExitInvalidDependentProcess">
             <summary>
               Looks up a localized string similar to Invalid PID &apos;{0}&apos;
            {1}.
             </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineExitOnProcessExitOptionDescription">
            <summary>
              Looks up a localized string similar to Exit the test process if dependent process exits. PID must be provided..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineExitOnProcessExitSingleArgument">
            <summary>
              Looks up a localized string similar to &apos;--{0}&apos; expects a single int PID argument.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineHelpOptionDescription">
            <summary>
              Looks up a localized string similar to Show the command line help..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineIgnoreExitCodeOptionDescription">
            <summary>
              Looks up a localized string similar to Do not report non successful exit value for specific exit codes (e.g. &apos;--ignore-exit-code 8;9&apos; ignore exit code 8 and 9 and will return 0 in these case).
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineInfoOptionDescription">
            <summary>
              Looks up a localized string similar to Display .NET test application information..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineMinimumExpectedTestsIncompatibleDiscoverTests">
            <summary>
              Looks up a localized string similar to &apos;--list-tests&apos; and &apos;--minimum-expected-tests&apos; are incompatible options.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineMinimumExpectedTestsOptionSingleArgument">
            <summary>
              Looks up a localized string similar to &apos;--minimum-expected-tests&apos; expects a single non-zero positive integer value (e.g. &apos;--minimum-expected-tests 10&apos;).
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineNoBannerOptionDescription">
            <summary>
              Looks up a localized string similar to Do not display the startup banner, the copyright message or the telemetry banner..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLinePortOptionDescription">
            <summary>
              Looks up a localized string similar to Specify the port of the server..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLinePortOptionSingleArgument">
            <summary>
              Looks up a localized string similar to &apos;--{0}&apos; expects a single valid port as argument.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineProviderDescription">
            <summary>
              Looks up a localized string similar to Microsoft Testing Platform command line provider.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineProviderDisplayName">
            <summary>
              Looks up a localized string similar to Platform command line provider.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineResultDirectoryOptionDescription">
            <summary>
              Looks up a localized string similar to The directory where the test results are going to be placed. If the specified directory doesn&apos;t exist, it&apos;s created. The default is TestResults in the directory that contains the test application..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineServerOptionDescription">
            <summary>
              Looks up a localized string similar to Enable the server mode..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineSkipBuildersNumberCheckOptionDescription">
            <summary>
              Looks up a localized string similar to For testing purposes.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineTestHostControllerPIDOptionDescription">
            <summary>
              Looks up a localized string similar to Eventual parent test host controller PID..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.PlatformCommandLineVSTestAdapterModeOptionDescription">
            <summary>
              Looks up a localized string similar to Bridge to VSTest APIs.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ProcessHasNotYetExitedErrorMessage">
            <summary>
              Looks up a localized string similar to Process should have exited before we can determine this value.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.RetryFailedAfterTriesErrorMessage">
            <summary>
              Looks up a localized string similar to Retry failed after {0} times.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerLogMessageDescription">
            <summary>
              Looks up a localized string similar to This data represents a server log message.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerLogMessageDisplayName">
            <summary>
              Looks up a localized string similar to Server log message.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerTestExecutionFilterFactoryDescription">
            <summary>
              Looks up a localized string similar to Creates the right test execution filter for server mode.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServerTestExecutionFilterFactoryDisplayName">
            <summary>
              Looks up a localized string similar to Server test execution filter factory.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServiceProviderCannotFindServiceErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot find service of type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServiceProviderServiceAlreadyRegistered">
            <summary>
              Looks up a localized string similar to Instance of type &apos;{0}&apos; is already registered.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.ServiceProviderShouldNotRegisterTestFramework">
            <summary>
              Looks up a localized string similar to Instances of type &apos;ITestFramework&apos; should not be registered through the service provider but through &apos;ITestApplicationBuilder.RegisterTestFramework&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.StartingServer">
            <summary>
              Looks up a localized string similar to Starting server. Listening on port &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TelemetryNotice">
             <summary>
               Looks up a localized string similar to Telemetry
            ---------
            Microsoft Testing Platform collects usage data in order to help us improve your experience. The data is collected by Microsoft and are not shared with anyone.
            You can opt-out of telemetry by setting the TESTINGPLATFORM_TELEMETRY_OPTOUT or DOTNET_CLI_TELEMETRY_OPTOUT environment variable to &apos;1&apos; or &apos;true&apos; using your favorite shell.
            
            Read more about Microsoft Testing Platform telemetry: https://aka.ms/testingplatform/telemetry.
             </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TelemetryProviderAlreadySetErrorMessage">
            <summary>
              Looks up a localized string similar to Telemetry provider is already set.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestAdapterInvokerFactoryAlreadySetErrorMessage">
            <summary>
              Looks up a localized string similar to An &apos;ITestFrameworkInvoker&apos; factory is already set.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderApplicationAlreadyRegistered">
            <summary>
              Looks up a localized string similar to The application has already been built.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage">
            <summary>
              Looks up a localized string similar to The test framework adapter factory has already been registered.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered">
            <summary>
              Looks up a localized string similar to The test framework capabilities factory has already been registered.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationBuilderTestFrameworkNotRegistered">
            <summary>
              Looks up a localized string similar to The test framework adapter has not been registered. Use &apos;ITestApplicationBuilder.RegisterTestFramework&apos; to register it.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationResultDescription">
            <summary>
              Looks up a localized string similar to Determine the result of the test application execution.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationResultDisplayName">
            <summary>
              Looks up a localized string similar to Test application result.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestApplicationVSTestModeTooManyBuilders">
            <summary>
              Looks up a localized string similar to VSTest mode only supports a single TestApplicationBuilder per process.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage">
            <summary>
              Looks up a localized string similar to An &apos;ITestExecutionFilterFactory&apos; factory is already set.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestFrameworkProxyApiShouldNotBeCalled">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; should not have been called on this proxy object.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestHostAdapterInvokerFailedTestSessionErrorMessage">
            <summary>
              Looks up a localized string similar to Test adapter test session failure.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TestProcessDidNotExitGracefullyErrorMessage">
            <summary>
              Looks up a localized string similar to Test application process didn&apos;t exit gracefully, exit code is &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TimeoutAcquiringSemaphoreErrorMessage">
            <summary>
              Looks up a localized string similar to Failed to acquire semaphore before timeout of &apos;{0}&apos; seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TimeoutFlushingLogsErrorMessage">
            <summary>
              Looks up a localized string similar to Failed to flush logs before the timeout of &apos;{0}&apos; seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterCannotContainSlashCharacterErrorMessage">
            <summary>
              Looks up a localized string similar to A filter &apos;{0}&apos; should not contain a &apos;/&apos; character.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterDescription">
            <summary>
              Looks up a localized string similar to Use a tree filter to filter down the tests to execute.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage">
            <summary>
              Looks up a localized string similar to An escape character should not terminate the filter string &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage">
            <summary>
              Looks up a localized string similar to Only the final filter path can contain &apos;**&apos; wildcard.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterOperatorNotAllowedErrorMessage">
            <summary>
              Looks up a localized string similar to Unexpected operator &apos;&amp;&apos; or &apos;|&apos; within filter expression &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterPathShouldStartWithSlashErrorMessage">
            <summary>
              Looks up a localized string similar to Invalid node path, expected root as first character &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterUnbalancedFilterErrorMessage">
            <summary>
              Looks up a localized string similar to Filter expression &apos;{0}&apos; contains an unbalanced number of &apos;{1}&apos; &apos;{2}&apos; operators.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.TreeNodeFilterUnexpectedSlashOperatorErrorMessage">
            <summary>
              Looks up a localized string similar to Filter contains an unexpected &apos;/&apos; operator inside a parenthesized expression.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedCallTelemetryIsDisabledErrorMessage">
            <summary>
              Looks up a localized string similar to Unexpected telemetry call, the telemetry is disabled..
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedExceptionDuringByteConversionErrorMessage">
            <summary>
              Looks up a localized string similar to An unexpected exception occured during byte conversion.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedExceptionInFileLoggerErrorMessage">
             <summary>
               Looks up a localized string similar to An unexpected exception occured in &apos;FileLogger.WriteLogToFileAsync&apos;.
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnexpectedStateErrorMessage">
            <summary>
              Looks up a localized string similar to Unexpected state in file &apos;{0}&apos; at line &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnknownCommunicationProtocolErrorMessage">
            <summary>
              Looks up a localized string similar to The communication protocol &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.Resources.PlatformResources.UnreachableLocationErrorMessage">
            <summary>
              Looks up a localized string similar to This program location is thought to be unreachable. File=&apos;{0}&apos; Line={1}.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.IMessageFormatter">
            <summary>
            A message formatter converts objects into a serialized format and can deserialize data into
            corresponding objects.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.IMessageHandler.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Reads the next <see cref="T:Microsoft.Testing.Platform.ServerMode.RpcMessage"/> payload from the client.
            </summary>
            <remarks>
            The reading is likely backed by a data stream and the message handler is responsible
            for reading the data stream and deserialization of the message.
            If the reading from the stream is canceled will throw an exception.
            If deserialization of the message fails, also will throw an exception.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.IMessageHandler.WriteRequestAsync(Microsoft.Testing.Platform.ServerMode.RpcMessage,System.Threading.CancellationToken)">
            <summary>
            Writes the next <see cref="T:Microsoft.Testing.Platform.ServerMode.RpcMessage"/> to the client.
            </summary>
            <remarks>
            The writing is likely backed by a data stream and the message handler is responsible
            for writing to the data stream and serialization of the message.
            If serialization of the message fails, will throw an exception.
            </remarks>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer">
            <summary>
            This class converts the events send to the message bus and sends these back to the client.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.#ctor(System.IServiceProvider,Microsoft.Testing.Platform.Hosts.IServerTestHost,System.Guid,Microsoft.Testing.Platform.Helpers.ITask)">
            <summary>
            This class converts the events send to the message bus and sends these back to the client.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.Description">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.PerRequestServerDataConsumer.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.RequestMessage">
            <summary>
            A request is a message for which the server should return a corresponding
            <see cref="T:Microsoft.Testing.Platform.ServerMode.ErrorMessage"/> or <see cref="T:Microsoft.Testing.Platform.ServerMode.ResponseMessage"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.RequestMessage.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            A request is a message for which the server should return a corresponding
            <see cref="T:Microsoft.Testing.Platform.ServerMode.ErrorMessage"/> or <see cref="T:Microsoft.Testing.Platform.ServerMode.ResponseMessage"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.NotificationMessage">
            <summary>
            A notification message is a message that notifies the server of an event.
            There's no corresponding response that the server should send back and as such
            no Id is specified when sending a notification.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.NotificationMessage.#ctor(System.String,System.Object)">
            <summary>
            A notification message is a message that notifies the server of an event.
            There's no corresponding response that the server should send back and as such
            no Id is specified when sending a notification.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.ErrorMessage">
            <summary>
            An error message is sent if some exception was thrown when processing the request.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.ErrorMessage.#ctor(System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            An error message is sent if some exception was thrown when processing the request.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.ServerMode.ResponseMessage">
            <summary>
            An response message is sent if a request is handled successfully.
            </summary>
            <remarks>
            If the RPC handler returns a <see cref="T:System.Threading.Tasks.Task"/> the <paramref name="Result"/>
            will be returned as <c>null</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.ResponseMessage.#ctor(System.Int32,System.Object)">
            <summary>
            An response message is sent if a request is handled successfully.
            </summary>
            <remarks>
            If the RPC handler returns a <see cref="T:System.Threading.Tasks.Task"/> the <paramref name="Result"/>
            will be returned as <c>null</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Testing.Platform.ServerMode.SerializerUtilities.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Testing.Platform.ServerMode.SerializerUtilities"/> class.
            Is a known fact that this serializer jsonite based suffer of boxing/unboxing issue but it's only for netstandard2.0 and we don't optimize for it for now.
            We aim to rewrite all the serialization with the best perfomance using .NET System.Text.Json api inside the Json.cs file.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.Services.ServiceProviderExtensions">
            <summary>
            Extension methods for getting services from an <see cref="T:System.IServiceProvider" />.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetRequiredService``1(System.IServiceProvider)">
            <summary>
            Gets the required service of type <typeparamref name="TService"/> from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="provider">The service provider.</param>
            <returns>The required service of type <typeparamref name="TService"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="provider"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the required service is not found.</exception>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetService``1(System.IServiceProvider)">
            <summary>
            Gets the service of type <typeparamref name="TService"/> from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="provider">The service provider.</param>
            <returns>The service of type <typeparamref name="TService"/> or null if not found.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="provider"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetMessageBus(System.IServiceProvider)">
            <summary>
            Gets the message bus from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The message bus.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetConfiguration(System.IServiceProvider)">
            <summary>
            Gets the configuration from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The configuration.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetCommandLineOptions(System.IServiceProvider)">
            <summary>
            Gets the command line options from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The command line options.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetLoggerFactory(System.IServiceProvider)">
            <summary>
            Gets the logger factory from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The logger factory.</returns>
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.ServiceProviderExtensions.GetOutputDevice(System.IServiceProvider)">
            <summary>
            Gets the output device from the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>The output device.</returns>
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.Uid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.Description">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Testing.Platform.Services.TestApplicationResult.DataTypesConsumed">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Testing.Platform.Services.TestApplicationResult.IsEnabledAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Testing.Platform.Telemetry.ITelemetryCollector">
            <summary>
            This service allows to collect usage information.
            For instance how long different operations run for, what kinds of capabilities
            are being enabled, disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.Telemetry.ITelemetryCollector.LogEventAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs a telemetry event.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager">
            <summary>
            Represents a manager for test host controllers.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddEnvironmentVariableProvider(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostEnvironmentVariableProvider})">
            <summary>
            Adds an environment variable provider to the test host controller manager.
            </summary>
            <param name="environmentVariableProviderFactory">The factory method that creates the environment variable provider.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddEnvironmentVariableProvider``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds an environment variable provider to the test host controller manager.
            </summary>
            <typeparam name="T">The type of the environment variable provider.</typeparam>
            <param name="compositeServiceFactory">The factory method that creates the composite service.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddProcessLifetimeHandler(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHostControllers.ITestHostProcessLifetimeHandler})">
            <summary>
            Adds a process lifetime handler to the test host controller manager.
            </summary>
            <param name="lifetimeHandler">The factory method that creates the process lifetime handler.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHostControllers.ITestHostControllersManager.AddProcessLifetimeHandler``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds a process lifetime handler to the test host controller manager.
            </summary>
            <typeparam name="T">The type of the process lifetime handler.</typeparam>
            <param name="compositeServiceFactory">The factory method that creates the composite service.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.ClientInfo">
            <summary>
            Represents client information.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.ClientInfo.Id">
            <summary>
            Gets the client ID.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.ClientInfo.Version">
            <summary>
            Gets the client version.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.ITestHostManager">
            <summary>
            Represents the interface for managing the test host.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestApplicationLifecycleCallbacks(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks})">
            <summary>
            Adds a test application lifecycle callbacks.
            </summary>
            <param name="testApplicationLifecycleCallbacks">The factory method for creating the test application lifecycle callbacks.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddDataConsumer(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer})">
            <summary>
            Adds a data consumer.
            </summary>
            <param name="dataConsumerFactory">The factory method for creating the data consumer.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddDataConsumer``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds a data consumer of type T.
            </summary>
            <typeparam name="T">The type of the data consumer.</typeparam>
            <param name="compositeServiceFactory">The composite extension factory for creating the data consumer.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestSessionLifetimeHandle(System.Func{System.IServiceProvider,Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler})">
            <summary>
            Adds a test session lifetime handle.
            </summary>
            <param name="testSessionLifetimeHandleFactory">The factory method for creating the test session lifetime handle.</param>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestSessionLifetimeHandle``1(Microsoft.Testing.Platform.Extensions.CompositeExtensionFactory{``0})">
            <summary>
            Adds a test session lifetime handle of type T.
            </summary>
            <typeparam name="T">The type of the test session lifetime handle.</typeparam>
            <param name="compositeServiceFactory">The composite extension factory for creating the test session lifetime handle.</param>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.SessionUid">
            <summary>
            Represents a unique identifier for a session.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.SessionUid.#ctor(System.String)">
            <summary>
            Represents a unique identifier for a session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.SessionUid.Value">
            <summary>
            Gets the value of the session identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Testing.Platform.TestHost.SessionUid.ToString">
            <summary>
            Returns a string representation of the SessionUid.
            </summary>
            <returns>A string representation of the SessionUid.</returns>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.TestSessionContext">
            <summary>
            Represents the context of a test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.TestSessionContext.SessionUid">
            <summary>
            Gets the unique identifier of the test session.
            </summary>
        </member>
        <member name="P:Microsoft.Testing.Platform.TestHost.TestSessionContext.Client">
            <summary>
            Gets the client information associated with the test session.
            </summary>
        </member>
        <member name="T:Microsoft.Testing.Platform.TestHost.WellKnownClients">
            <summary>
            Represents well-known clients in the testing platform.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestHost.WellKnownClients.TestingPlatformConsole">
            <summary>
            Represents the Testing Platform Console client.
            </summary>
        </member>
        <member name="F:Microsoft.Testing.Platform.TestHost.WellKnownClients.VisualStudio">
            <summary>
            Represents the Visual Studio Testing Platform Client.
            </summary>
        </member>
        <member name="T:PlatformVersion">
            <summary>
            Repository version, created at build time.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the GetRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.GetRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.GetRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)">
            <summary>Pushes 2 values onto the backtracking stack.</summary>
        </member>
    </members>
</doc>
